version: '3.4'

x-common-variables: &common-variables
  REDIS_BUS: 'redis://txrx-redis:6379'
  REDIS_P2P: 'redis://txrx-redis-p2p:6379'
  TX: 'tx'
  RX: 'rx'
  P2P: 'p2p'
  TTL: 600000
  CONSUMER_BLOCK: 100
  CONSUMER_COUNT: 1000
  STREAM_MAXLEN: 500000
  P2P_MAXLEN: 10000
  NODE_ENV: development

services:
  websocket:
    container_name: txrx-websocket
    image: txrx-websocket:latest
    build:
      context: ./
      args:
        - PACKAGE=websocket
        - DEPS=streamer consumer redis
    depends_on:
      - redis
    ports:
      - '8080:8080'
    restart: always
    environment:
        <<: *common-variables
        WEBSOCKET_PORT: 8080
        CONSUMER_GROUP: 'websocket'
        CONSUMER: 'w0'
        THROTTLE_WARNS: 5
        THROTTLE_MESSAGES: 10
        THROTTLE_TIME_UNIT: 5000
    networks:
      - bus

  dispatcher:
    container_name: txrx-dispatcher
    image: txrx-dispatcher:latest
    build:
      context: ./
      args:
        - PACKAGE=dispatcher
        - DEPS=consumer streamer p2p redis
    depends_on:
      - redis
      - redis-p2p
    restart: always
    environment:
        <<: *common-variables
        CONSUMER_GROUP: 'dispatcher'
        CONSUMER: 'd0'
        P2P_PEER: 'dispatcher'
    networks:
      - bus
      - data
      - p2p

  rpc:
    container_name: txrx-rpc
    image: txrx-rpc:latest
    build:
      context: ./
      args:
        - PACKAGE=rpc
        - DEPS=consumer streamer p2p backend redis
    depends_on:
      - redis
      - redis-p2p
    restart: always
    environment:
        <<: *common-variables
        CONSUMER_GROUP: 'rpc'
        CONSUMER: 'r0'
        P2P_PEER: 'rpc'
        RPC: 'rpc'
        HANDLERS_DIR: backend/dist/src/handlers/general
        DATABASE_URL: postgres://postgres@txrx-postgres:5432/txrx
        REDIS_URL: 'redis://txrx-redis:6379'
    networks:
      - bus
      - data
      - p2p

  rpc-auth:
    container_name: txrx-rpc-auth
    image: txrx-rpc-auth:latest
    build:
      context: ./
      args:
        - PACKAGE=rpc
        - DEPS=consumer streamer p2p backend redis
    depends_on:
      - redis
      - redis-p2p
      - postgres
    restart: always
    environment:
        <<: *common-variables
        CONSUMER_GROUP: 'rpc'
        CONSUMER: 'r0'
        P2P_PEER: 'rpc-auth'
        RPC: 'auth'
        HANDLERS_DIR: backend/dist/src/handlers/auth
        DATABASE_URL: postgres://postgres@txrx-postgres:5432/txrx
        REDIS_URL: 'redis://txrx-redis:6379'
    networks:
      - bus
      - data
      - p2p

  redis:
    container_name: txrx-redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - bus

  redis-p2p:
    container_name: txrx-redis-p2p
    image: redis:latest
    restart: always
    ports:
      - 7379:6379
    networks:
      - p2p

  postgres:
    container_name: txrx-postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - data

networks:
  bus:
    name: txrx-bus
  data:
    name: txrx-data
  p2p:
    name: txrx-p2p

volumes:
  postgres:
    driver: local
